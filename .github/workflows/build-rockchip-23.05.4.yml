name: build-rockchip-imm-23.05.4-release

on:
  workflow_dispatch:
    inputs:
      profile:
        description: '手动输入的多个 profile，并按逗号分隔'
        required: true
        default: 'friendlyarm_nanopi-r3s'
      rootfs_partsize:
        description: '设置根文件系统分区大小 (MB)'
        required: true
        default: '1024'

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set executable permissions
        run: chmod +x ${{ github.workspace }}/rockchip/build.sh

      - name: Setup Docker and Build
        run: |
          profiles="${{ github.event.inputs.profile }}"
          rootfs_partsize="${{ github.event.inputs.rootfs_partsize }}"
          
          IFS=',' read -r -a profile_array <<< "$profiles"
          
          for profile in "${profile_array[@]}"; do
            echo "Building for profile: $profile"
            
            docker run --rm -i \
              --user root \
              -v "${{ github.workspace }}/bin:/home/build/immortalwrt/bin" \
              -v "${{ github.workspace }}/files:/home/build/immortalwrt/files" \
              -v "${{ github.workspace }}/rockchip/imm.config:/home/build/immortalwrt/.config" \
              -v "${{ github.workspace }}/rockchip/build.sh:/home/build/immortalwrt/build.sh" \
              -e PROFILE=$profile \
              -e ROOTFS_PARTSIZE=$rootfs_partsize \
              immortalwrt/imagebuilder:rockchip-armv8-openwrt-23.05.4 /bin/bash /home/build/immortalwrt/build.sh
          done

      - name: Create GitHub Release Info
        uses: softprops/action-gh-release@v2.1.0
        with:
          tag_name: Autobuild
          name: ImmortWrt-Rockchip
          body_path: ${{ github.workspace }}/info.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload ImmortWrt as release assets
        uses: softprops/action-gh-release@v2.1.0
        with:
          tag_name: Autobuild
          files: ${{ github.workspace }}/bin/targets/rockchip/armv8/*.img.gz
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
